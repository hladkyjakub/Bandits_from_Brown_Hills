#textdomain wesnoth-Bandits_from_Brown_Hills
###########################################################
# ITEM CODE IS FROM REMADE EASTERN INVASION MADE BY DALAS #
###########################################################
#define PLACE_ITEM ID NME IMAGE IMAGE_DESC X Y REQUIREMENTS ITEM_NAME ITEM_DESC TRAIT_DESC ITEM_USE INVALID_DESC EFFECTS EQUIP_WML
    [item]
        x,y={X},{Y}
        image={IMAGE}
    [/item]
    [event]
        name=moveto
        id=EVENT_{ID}
        first_time_only=no
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [if]
            [have_unit]
                x,y={X},{Y}
                [and]
                    {REQUIREMENTS}
                [/and]
            [/have_unit]

            [then]
                [item_dialog]
                    name={ITEM_NAME}
                    image={IMAGE_DESC}
                    description={ITEM_DESC}
                    effect={ITEM_USE}
                    take_string=_"Take it."
                    leave_string=_"Leave it."
                [/item_dialog]
                [if]
                    {VARIABLE_CONDITIONAL item_picked equals yes}
                    [then]
                        [remove_event]
                            id=EVENT_{ID}
                        [/remove_event]
                        [remove_item]
                            x,y={X},{Y}
                            image={IMAGE}
                        [/remove_item]
                        [modify_unit]
                            [filter]
                                side=1
                                x,y={X},{Y}
                            [/filter]
                            moves=0         # picking up an item consumes your moves and attack. Prevents baneblade cheese, and kinda feels right anyways.
                            attacks_left=0  # so we can't pick up multiple items on 1 turn, or repeatedly suicide with the baneblade
                            [trait]
                                id=TRAIT_{ID}
                                name={NME}
                                description={TRAIT_DESC}
                                {EFFECTS}
                            [/trait]
                        [/modify_unit]
                        {EQUIP_WML}
                    [/then]
                [/if]
            [/then]
            [else]
                [item_dialog_musttake]
                    name={ITEM_NAME}
                    image={IMAGE_DESC}
                    description={ITEM_DESC}
                    effect={ITEM_USE}
                    take_string=_"Leave it."
                [/item_dialog_musttake]
                {SPEAKING (x,y={X},{Y}) {INVALID_DESC}}
            [/else]
        [/if]
    [/event]
#enddef
#define GLOBAL__DROPPABLE ID IMAGE DESC DIE_DROP_ITEM CMD_DROP_ITEM
    [event]
        name=die
        first_time_only=no
        [filter]
            trait=TRAIT_{ID}
        [/filter]
        {DIE_DROP_ITEM}
    [/event]
    [event]
        name=start
        [clear_menu_item]
            id=DROP_ITEM_{ID}
        [/clear_menu_item]
        [set_menu_item]
            id=DROP_ITEM_{ID} # for some reason this breaks if I use the default ID
            description={DESC}
            image={IMAGE}~SCALE_INTO(25,25)
            [filter_location]
                [filter]
                    side=1
                    trait=TRAIT_{ID}
                [/filter]
            [/filter_location]
            [command]
                {CMD_DROP_ITEM}
                [remove_trait]
                    trait_id=TRAIT_{ID}
                [/remove_trait]
            [/command]
        [/set_menu_item]
    [/event]
#enddef
#define PLACE_ITEM_MUSTTAKE ID IMAGE IMAGE_DESC X Y ITEM_NAME ITEM_DESC ITEM_USE EQUIP_WML
    [item]
        x,y={X},{Y}
        image={IMAGE}
    [/item]
    [event]
        name=moveto
        id=EVENT_{ID}
        first_time_only=no
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [item_dialog_musttake]
            name={ITEM_NAME}
            image={IMAGE_DESC}
            description={ITEM_DESC}
            effect={ITEM_USE}
            take_string=_"Take it."
        [/item_dialog_musttake]
        [remove_event]
            id=EVENT_{ID}
        [/remove_event]
        [remove_item]
            x,y={X},{Y}
            image={IMAGE}
        [/remove_item]
        {EQUIP_WML}
    [/event]
#enddef
#define NOTE_REUSEABLE
    _"<span size='small'><i>  This item is reusable if its wielder dies, and can be dropped by right clicking.</i></span>
<span size='small'><i>  Picking up an item consumes your moves and attack.</i></span>
<b></b>"
#enddef
#define NOTE_SINGLE_USE
    _"<span size='small'><i>This item can <b>NOT</b> be dropped, and can <b>NOT</b> be reused if its user dies.</i></span>
<span size='small'><i>  Picking up an item consumes your moves and attack.</i></span>
<b></b>"
#enddef
#define PLACE_ITEM_RING_OF_STRENGT X Y ID
    {PLACE_ITEM
    {ID}  _"ring of strengt"  items/ring-gold.png  icons/ring_gold.png {X}  {Y}  
    (
    [not]
        trait=strong
    [/not]
    )
    _"Ring of Strengt"
    _"Three Rings for the Elven-kings under the sky,
Seven for the Dwarf-lords in their halls of stone,
Nine for Mortal Men doomed to die,
One for the Dark Lord on his dark throne
In the Land of Mordor where the Shadows lie.

One Ring to rule them all, One Ring to find them,
One Ring to bring them all and in the darkness bind them

In the Land of Mordor where the Shadows lie. 
    <i><b><span color='#00FF00'>+2</span> melee damage, <span color='#00FF00'>+2</span> hitpoints</b></i>.
    <i><b>Strong units can't equip it</b></i>."
    ""
    {NOTE_REUSEABLE}
    "That ring could increase my strength, but I'm already strong enought, no need for it."
    (
        [effect]
            apply_to=attack
            range=melee
            increase_damage=2
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=2
            increase=2
        [/effect]
        [effect]
            apply_to=overlay
            add=overlays/ring-gold-overlay.png
        [/effect]
    )
    ()
    }
#enddef
#define GLOBAL__DROPPABLE_RING_OF_STRENGT ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/ring_gold.png
    _"Drop Ring of Strengt"
    ({PLACE_ITEM_RING_OF_STRENGT $unit.x $unit.y {ID}})
    (
    {PLACE_ITEM_RING_OF_STRENGT $x1 $y1 {ID}}
    [harm_unit]
        [filter]
            x,y=$x1, $y1
        [/filter]
        fire_event=yes
        amount=2
        animate=yes
    [/harm_unit]
    )
    }
#enddef
#define PLACE_ITEM_BOOTS_OF_SPEED X Y ID
    {PLACE_ITEM
    {ID}  _"boots of speed"  items/boots.png  icons/boots_elven.png {X}  {Y}  
    (
    [not]
        trait=quick
    [/not]
    )
    _"Boots of Speed"
    _"Puss's property.
    <i><b><span color='#00FF00'>+2</span> movement, <span color='#FF0000'>-10%</span> hitpoints</b></i>.
    <i><b>Quick units can't equip it</b></i>."
    ""
    {NOTE_REUSEABLE}
    "These boots looks great for running, but my boots are fine."
    (
        [effect]
            apply_to=movement
            increase=2
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=-10%
            increase=-10%
        [/effect]
        [effect]
            apply_to=overlay
            add=overlays/boots-overlay.png
        [/effect]
    )
    ()
    }
#enddef
#define GLOBAL__DROPPABLE_BOOTS_OF_SPEED ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/boots_elven.png
    _"Drop Boots of Speed"
    ({PLACE_ITEM_BOOTS_OF_SPEED $unit.x $unit.y {ID}})
    ({PLACE_ITEM_BOOTS_OF_SPEED $x1 $y1 {ID}})
    }
#enddef
#define PLACE_ITEM_HUNTSMANS_HAT X Y ID
    {PLACE_ITEM
    {ID}  _"huntsmans hat"  items/hat.png  icons/hat-huntsman.png {X}  {Y}  
    (
    [not]
        trait=dextrous
    [/not]
    )
    _"Huntsmans hat"
    _"It got auto-aim!
    <i><b><span color='#00FF00'>+2</span> ranged damage</b></i>.
    <i><b>Dextrous units can't equip it</b></i>."
    ""
    {NOTE_REUSEABLE}
    "I don't need this dirty hat!"
    (
        [effect]
            apply_to=attack
            range=ranged
            increase_damage=2
        [/effect]
        [effect]
            apply_to=overlay
            add=overlays/huntsman-hat-overlay.png
        [/effect]
    )
    ()
    }
#enddef
#define GLOBAL__DROPPABLE_HUNTSMANS_HAT ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/hat-huntsman.png
    _"Drop Huntsmans hat"
    ({PLACE_ITEM_HUNTSMANS_HAT $unit.x $unit.y {ID}})
    ({PLACE_ITEM_HUNTSMANS_HAT $x1 $y1 {ID}})
    }
#enddef
#define PLACE_ITEM_BREASTPLATE_OF_THE_MIGHTY X Y ID
    {PLACE_ITEM
    {ID}  _"breastplate of the mighty"  items/armor.png  icons/breastplate.png {X}  {Y}  
    (
    [not]
        trait=resilient
    [/not]
    )
    _"Breastplate of the Mighty"
    _"Protection IV
    <i><b><span color='#00FF00'>+20%</span> ranged physical resistance,
<span color='#00FF00'>+4</span> hitpoints, <span color='#00FF00'>+1</span> hitpoints per level</b></i>.
    <i><b>Resilient units can't equip it</b></i>."
    "<span color='#0f0'>+20%</span> ranged physical resistance"
    {NOTE_REUSEABLE}
    "I can stand some hits, someone else should take it."
    (
        [effect]
            apply_to=hitpoints
            increase_total=4
            increase=4
        [/effect]
        [effect]
            apply_to=hitpoints
            times=per level
            increase_total=1
            increase=1
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
                [resistance]
                    id=breastplate_of_the_mighty_{ID}
                    affect_self=yes
                    add=20
                    max_value=100
                    apply_to=blade,pierce,impact
                    [filter_second_weapon]
                        range=ranged
                    [/filter_second_weapon]
                [/resistance]
            [/abilities]
        [/effect]
        [effect]
            apply_to=overlay
            add=overlays/armor-overlay.png
        [/effect]
    )
    ()
    }
#enddef
#define GLOBAL__DROPPABLE_BREASTPLATE_OF_THE_MIGHTY ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/breastplate.png
    _"Drop Breastplate of the Mighty"
    ({PLACE_ITEM_BREASTPLATE_OF_THE_MIGHTY $unit.x $unit.y {ID}})
    (
    {PLACE_ITEM_BREASTPLATE_OF_THE_MIGHTY $x1 $y1 {ID}}
    #[modify_unit]
        #[filter]
            #x,y=$x1, $y1
        #[/filter]
        #[effect]
            #apply_to=hitpoints
            #increase=-4
        #[/effect]
        #[effect]
            #apply_to=hitpoints
            #times=per level
            #increase=-1
        #[/effect]
    #[/modify_unit]
    [harm_unit]
        [filter]
            x,y=$x1, $y1
        [/filter]
        fire_event=yes
        amount="$($unit.level + 4)"
        animate=yes
    [/harm_unit]
    )
    }
#enddef
#define PLACE_ITEM_ANKH X Y ID
    {PLACE_ITEM
    {ID}  _"ankh"  items/ankh-necklace.png  icons/ankh_necklace.png {X}  {Y}  
    (
    [not]
        trait=healthy
    [/not]
    )
    _"Ankh"
    _"Your Constitution score is 19 while you wear this amulet.
    <i><b>Unit always rest heals, <span color='#00FF00'>+2</span> hitpoints per level</b></i>.
    <i><b>Healthy units can't equip it</b></i>."
    "Always rest heals"
    {NOTE_REUSEABLE}
    "I don't want to wear that weird symbol!"
    (
        [effect]
            apply_to="healthy"
        [/effect]
        [effect]
            apply_to=hitpoints
            times=per level
            increase_total=2
            increase=2
        [/effect]
        [effect]
            apply_to=overlay
            add=overlays/ankh-necklace-overlay.png
        [/effect]
    )
    ()
    }
#enddef
#define GLOBAL__DROPPABLE_ANKH ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/ankh_necklace.png
    _"Drop Ankh"
    ({PLACE_ITEM_ANKH $unit.x $unit.y {ID}})
    (
    {PLACE_ITEM_ANKH $x1 $y1 {ID}}
    [harm_unit]
        [filter]
            x,y=$x1, $y1
        [/filter]
        fire_event=yes
        amount="$($unit.level * 2)"
        animate=yes
    [/harm_unit]
    )
    }
#enddef
#define PLACE_ITEM_DIADEM_OF_INTELLIGENCE X Y ID
    {PLACE_ITEM
    {ID}  _"diadem of intelligence"  items/circlet-silver.png  icons/circlet_winged.png {X}  {Y}  
    (
    [not]
        trait=intelligent
    [/not]
    )
    _"Diadem of Intelligence"
    _"Wit beyond measure is man's greatest treasure.
    <i><b><span color='#00FF00'>-40%</span> experience</b></i>.
    <i><b>Intelligent units can't equip it</b></i>."
    ""
    {NOTE_REUSEABLE}
    "You think, I'm stupid? I'm intelligent enought!"
    (
        [effect]
            apply_to=overlay
            add=overlays/circlet-silver-overlay.png
        [/effect]
    )
    (
    [store_unit]
        [filter]
            x,y={X},{Y}
        [/filter]
        variable=diadem_unit
    [/store_unit]
    [if]
        [variable]
            name=diadem_unit.experience
            greater_than_equal_to=1
        [/variable]
        [then]
            [modify_unit]
                [filter]
                    x,y={X},{Y}
                [/filter]
                [effect]
                    apply_to=experience
                    increase=-40%
                [/effect]
            [/modify_unit]
        [/then]
    [/if]
    [modify_unit]
        [filter]
            x,y={X},{Y}
        [/filter]
        [effect]
            apply_to=max_experience
            increase=-40%
        [/effect]
    [/modify_unit]
    )
    }
#enddef
#define GLOBAL__DROPPABLE_DIADEM_OF_INTELLIGENCE ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/circlet_winged.png
    _"Drop Diadem of Intelligence"
    ({PLACE_ITEM_DIADEM_OF_INTELLIGENCE $unit.x $unit.y {ID}})
    (
    {PLACE_ITEM_DIADEM_OF_INTELLIGENCE $x1 $y1 {ID}}
    [store_unit]
        [filter]
            x,y=$x1, $y1
        [/filter]
        variable=unit
    [/store_unit]
    [if]
        [variable]
            name=unit.experience
            greater_than_equal_to=1
        [/variable]
        [then]
            ###To make sure you can't get more XP than before(without fight) -> makes item more useful on long equips
            {VARIABLE unit_experience_modulo_3 "$($unit.experience % 3)"}
            [modify_unit]
                [filter]
                    x,y=$x1, $y1
                [/filter]
                [effect]
                    apply_to=experience
                    increase=66.666%
                [/effect]
            [/modify_unit]
            [if]
                [variable]
                    name=unit_experience_modulo_3
                    equals=1
                [/variable]
                [then]
                    [modify_unit]
                        [filter]
                            x,y=$x1, $y1
                        [/filter]
                        [effect]
                            apply_to=experience
                            increase=-1
                        [/effect]
                    [/modify_unit]
                [/then]
            [/if]
        [/then]
    [/if]
    )
    }
#enddef
#define PLACE_ITEM_SMOKEBOMBS X Y ID USES
    {PLACE_ITEM
    {ID}  _"smoke bombs"  items/smokebombs.png  icons/bomb.png {X}  {Y}  
    ()
    _"Smoke bombs"
    _"When life gives you lemons, throw smoke bombs and disappear into the confusion!
    <i><b>Grants a <span color='#00FF00'>new</span> attack</b></i>.
    <i><b>Epileptic units can't equip it</b></i>."
    "Use me!"
    {NOTE_REUSEABLE}
    "Too bang-bang for me."
    (
        [effect]
            apply_to=overlay
            add=overlays/smoke-bomb-overlay.png
        [/effect]
        [effect]
            apply_to=new_attack
            name=smoke_bombs
            icon=icons/bomb.png
            description=_"smoke bombs"
            type=impact
            range=no_retalation
            damage=0
            number=1
            defense_weight=0
            #so it can't be used in defence
            [specials]
                {WEAPON_SPECIAL_STUN}
                {WEAPON_SPECIAL_ALWAYS_HITS}
                {WEAPON_SPECIAL_HIT_AND_RUN}
                {WEAPON_SPECIAL_ALL_ROUND}
                {WEAPON_SPECIAL_LIMITED_USES {USES} TRAIT_{ID} DROP_ITEM_{ID}}
            [/specials]
        [/effect]
        [effect]
            apply_to=new_animation
            [attack_anim]
                [filter_attack]
                    name=smoke_bombs
                [/filter_attack]
                start_time=0
                missile1_start_time=0
                [missile1_frame]
                    sound=gunshot.wav
                    halo="halo/dragonguard/dg-muzzle-flash-se-[1~17].png~GS():[80*3,90,100,120*3,100*9]"
                    auto_vflip=no
                [/missile1_frame]
                [missile2_frame]
                    halo="halo/dragonguard/dg-muzzle-flash-s-[1~17].png~GS():[80*3,90,100,120*3,100*9]"
                    auto_vflip=no
                [/missile2_frame]
                [missile3_frame]
                    halo="halo/dragonguard/dg-muzzle-flash-ne-[1~17].png~GS():[80*3,90,100,120*3,100*9]"
                    auto_vflip=no
                [/missile3_frame]
                [missile4_frame]
                    halo="halo/dragonguard/dg-muzzle-flash-n-[1~17].png~GS():[80*3,90,100,120*3,100*9]"
                    auto_vflip=no
                [/missile4_frame]
                [missile5_frame]
                    halo="halo/dragonguard/dg-muzzle-flash-se-[1~17].png~GS()~FL(horizontal):[80*3,90,100,120*3,100*9]"
                    auto_vflip=no
                [/missile5_frame]
                [missile6_frame]
                    halo="halo/dragonguard/dg-muzzle-flash-ne-[1~17].png~GS()~FL(horizontal):[80*3,90,100,120*3,100*9]"
                    auto_vflip=no
                [/missile6_frame]
                [missile7_frame]
                    halo="projectiles/fireball-fail-[1~7].png~SCALE(200,200):100"
                    auto_vflip=no
                [/missile7_frame]
            [/attack_anim]
        [/effect]
    )
    ()
    }
#enddef
#define GLOBAL__DROPPABLE_SMOKEBOMBS ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/bomb.png
    _"Drop Smokebombs"
    (
    [lua]
        code=<<
local u_table = wml.variables["unit"]
local specials = wml.get_child(wml.find_child(u_table, "attack", {name = "smoke_bombs"}), "specials")
local limited_uses = wml.find_child(specials, "dummy", {id = "limited_uses"})
wml.variables["uses"] = tonumber(limited_uses.uses_left)
        >>
    [/lua]
    {PLACE_ITEM_SMOKEBOMBS $unit.x $unit.y {ID} $uses}
    )
    (
    [lua]
        code=<<
local u_table = wml.variables["unit"]
local specials = wml.get_child(wml.find_child(u_table, "attack", {name = "smoke_bombs"}), "specials")
local limited_uses = wml.find_child(specials, "dummy", {id = "limited_uses"})
wml.variables["uses"] = tonumber(limited_uses.uses_left)
        >>
    [/lua]
    {PLACE_ITEM_SMOKEBOMBS $x1 $y1 {ID} $uses}
    )
    }
#enddef
#define PLACE_ITEM_MINERAL_WATER X Y ID
    {PLACE_ITEM
    {ID}  _"mineral water"  items/holy-water.png  icons/mineral_water.png {X}  {Y}
    ()
    _"Bottle of Mineral Water"
    _"Sip, sip, hooray! ... -is
It's like carrying around a tiny oasis,
only without the sand in your shoes
and with way more refreshing vibes.
<i><b><span color='#00FF00'>+healing power</span>, <span color='#00FF00'>+3</span> hitpoints</b></i>.
    <i><b>Drunk units can't equip it</b></i>."
    "heals allies"
    {NOTE_REUSEABLE}
    "Ehm, ... yes mineral water but with whisky only."
    (
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_HEALS}
            [/abilities]
        [/effect]
        [effect]
            apply_to=hitpoints
            increase_total=3
            increase=3
        [/effect]
        [effect]
            apply_to=overlay
            add=overlays/holy-water-overlay.png
        [/effect]
    )
    (
        [sound]
            name=heal.wav
        [/sound]
    )
    }
#enddef
#define GLOBAL__DROPPABLE_MINERAL_WATER ID
    {GLOBAL__DROPPABLE
    {ID}
    icons/mineral_water.png
    _"Drop Bottle of Mineral Water"
    ({PLACE_ITEM_MINERAL_WATER $unit.x $unit.y {ID}})
    (
    {PLACE_ITEM_MINERAL_WATER $x1 $y1 {ID}}
    [harm_unit]
        [filter]
            x,y=$x1, $y1
        [/filter]
        fire_event=yes
        amount=3
        animate=yes
    [/harm_unit]
    )
    }
#enddef
#define STORY_HOARD_OF_GOLD_MUSTTAKE X Y ID
    {PLACE_ITEM_MUSTTAKE {ID} "items/gold-coins-large.png" "icons/coins_copper.png" {X} {Y} _"Gold" _"You're smart, you know what gold is!"
    _"<i><b><span color='#FFD700'>+ lots of gold pieces!</span></b></i>
<span size='small'><i>  Picking up an item consumes your moves and attack.</i></span>" 
(
[sound]
    name=gold.ogg
[/sound]
{SPEAKING (x,y={X}, {Y}) "Oh my richness, that's a lot of gold!"}
{SPEAKING (id=jareth) "That's our loot... don't touch it until we will get out from this hell!"}
{SPEAKING (x,y={X}, {Y}) "That means more gold for me, once you'll all die!"}
{SPEAKING (id=jareth) "?!"}
{VARIABLE wenrys_objective_show 0 }
[if]
    [variable]
        name=citadel_objective_show
        boolean_equals=false
    [/variable]
    [then]
        {VARIABLE citadel_objective_show true}
        {VARIABLE citadel_objective_description "Siege the Citadel" }
    [/then]
[/if]
[show_objectives]
[/show_objectives]
[scroll_to]
    x,y={X}, {Y}
[/scroll_to]
{SPEAKING (x,y={X}, {Y}) "Look he got some smokebombs."}
)}
#enddef