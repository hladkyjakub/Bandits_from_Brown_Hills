#alias e6=lua wesnoth.require("wml-utils").handle_event_commands(wml.tovconfig(wml.load("~add-ons/Bandits_from_Brown_Hills/test_WML_event_6.cfg")))
[lua]
    code=<<
local animator = wesnoth.units.create_animator()
local damage = 10
local ms_per_missile_frame = 30

local x = 14
local y = 30
local side = 5
local w_cfg = {type="arcane",number=1,damage=damage,range="ranged"}
local w2 = {}
local w2_index = {}
local w2_cfg = {}

local u = wesnoth.units.create({side=side,type="BfBH Revenant",x=x,y=y})
u:to_map()

local enemies=wesnoth.units.find_on_map({{"filter_side",{{"enemy_of",{side=u.side}}}},{"filter_location",{{"filter_adjacent_location",{x=x,y=y}}}}})
local damage_t={}
local dying = {}

for i,e in ipairs(enemies) do
    e.facing = wesnoth.map.get_relative_dir(e.x, e.y, x, y)
    w2[i], w2_index[i] = find_weapon(e,{range="ranged"})
    w2_cfg[i] = {}
    if w2[i] ~= nil then
        w2_cfg[i] = w2[i].__cfg
    end
    wesnoth.game_events.fire("attack", u.loc, e.loc, {{"first",w_cfg},{"second",w2_cfg[i]}})

    u.attacks[(#u.attacks + 1)] = w_cfg
    local _,_,u_s,e_s = wesnoth.simulate_combat(u,#u.attacks, e, w2_index[i])
    -- gui.show_inspector({})
    u.attacks[#u.attacks] = nil
    damage_t[i] = math.floor(u_s.damage)
    local text2 = damage_t[i]

    wesnoth.interface.add_hex_overlay(14,30, {halo = "projectiles/darkmissile/"..wesnoth.map.get_relative_dir(x, y, e.x, e.y).."/00[0~20].png~CS(-250,-250,-250):"..ms_per_missile_frame..",misc/blank-hex.png:999999"})
    wesnoth.interface.add_hex_overlay(e.x, e.y, {halo = "misc/blank-hex.png:150,halo/dark-explosion/final-[6~1].png~CS(-150,-150,-150)~O([40%,50%,60%*2,50%,40%]),misc/blank-hex.png:999999"})

    animator:add(e, "defend", "hit",{with_bars = true, primary = wesnoth.units.create_weapon(w_cfg), secondary = w2[i], text = text2,color={255,0,0}})
end
animator:add(u, "recruited", "hit",{with_bars = false})
animator:run()
animator:clear()

for i,e in ipairs(enemies) do
    e.hitpoints = e.hitpoints - damage_t[i]
    wesnoth.game_events.fire("attacker_hits", u.loc, e.loc, {{"first",w_cfg},{"second",w2_cfg[i]},damage_inflicted=damage_t[i]})
    if e.hitpoints <= 0 then
        dying[#dying+1] = e
    end
end

for i,e in ipairs(enemies) do
    wesnoth.game_events.fire("attack_end", u.loc, e.loc, {{"first",w_cfg},{"second",w2_cfg[i]}})
end

for i,e in ipairs(dying) do
    wesnoth.game_events.fire("last_breath", e.loc, u.loc, {{"first",w2_cfg[i]},{"second",w_cfg}}) --INVERTED
end

for i,e in ipairs(dying) do
    animator:add(e, "death", "hit",{with_bars = false, primary = w2[i], secondary = wesnoth.units.create_weapon(w_cfg)}) --inverted TODO unsure!
end

animator:run()
animator:clear()

local e_level = {}
local e_id = {}

for i,e in ipairs(dying) do
    e_level[i] = e.level
    e_id[i]= e.id
    wesnoth.game_events.fire("die", e.loc, u.loc, {{"first",w2_cfg[i]},{"second",w_cfg}}) --inverted
    wesnoth.wml_actions.kill({ id = e_id[i], animate = false, fire_event = false})
    if e_level[i] == 0 then
        u.experience = wesnoth.game_config.kill_experience * 0.5
    else
        u.experience = u.experience +(e_level[i] * wesnoth.game_config.kill_experience)
    end
    u:advance(true,true)
end
-- "breaks" endurance (not enemies, no problem), defender fights util he gets attacked by the original enemy (it should continue even after it's hit by original enemy probably)
-- raider doesn't work, ranged retalaition weapon, naga guardian, saurian ...
-- at end set all combat variables to nil
-- TODO deosn't work for berserker (not intended, just a warning for future me), untested with plague








--TODO attack_end

-- if defender.valid == nil or defender.hitpoints <= 0 then
--     wesnoth.game_events.fire("attack end", u.loc, loc2, {{"first",wml.get_child(wesnoth.current.event_context,"weapon")},{"second",wml.get_child(wesnoth.current.event_context,"second_weapon")}})
--     if defender.valid == nil then
--         std_print("defender doesn't exist PROPPER DEATH EVENTS should be fired already, by some other code")
--         break
--     end
--     wesnoth.game_events.fire("last breath", loc2, attacker.loc, {{"first",w2_cfg},{"second",w.__cfg}}) --inverted
--     animator:add(defender, "death", "hit",{with_bars = false, primary = w2, secondary = w}) --inverted TODO unsure!
--     animator:run()
--     animator:clear()
--     defender_level = defender.level
--     defender_id= defender.id
--     wesnoth.game_events.fire("die", defender.loc, attacker.loc, {{"first",w2_cfg},{"second",w.__cfg}}) --inverted
--     wesnoth.wml_actions.kill({ id = defender_id, animate = false, fire_event = false})
--     if defender_level == 0 then
--         attacker.experience = wesnoth.game_config.kill_experience * 0.5
--         attacker:advance(true,true)
--     else
--         attacker.experience = attacker.experience +(defender_level * wesnoth.game_config.kill_experience)
--         attacker:advance(true,true)
--     end
--     std_print("fight should end")
--     wml.variables["fire_no_attack_end_event"] = true
--     -- "breaks" endurance (not enemies, no problem), defender fights util he gets attacked by the original enemy (it should continue even after it's hit by original enemy probably)
--     -- raider doesn't work, ranged retalaition weapon, naga guardian, saurian ...
--     -- at end set all combat variables to nil
--     -- TODO deosn't work for berserker (not intended, just a warning for future me), untested with plague
--     break
-- end
    >>
[/lua]